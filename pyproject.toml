[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "typingx"
version = "0.7.0"
description = "Extend typing package functionalities"
authors = ["Eric Jolibois <em.jolibois@gmail.com>"]
license = "MIT"
repository = "https://github.com/PrettyWood/typingx"
homepage = "https://github.com/PrettyWood/typingx"
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Typing :: Typed"
]
include = ["typingx/py.typed"]

[tool.poetry.dependencies]
python = "^3.6.2"
typing_extensions = { version = "^4.0.1", python = "<3.9.2" }
typing-extensions = {version = "^4.0.1", extras = ["pep655"]}

[tool.poetry.dev-dependencies]
black = "^21.12b0"
flake8 = "^4.0.1"
isort = "^5.10.1"
mypy = "^0.941"
pre-commit = "^2.17.0"
pytest = "^6.2.5"
pytest-cov = "^3.0.0"

[tool.black]
line-length = 100
target-version = ["py310"]

[tool.isort]
line_length = 100
include_trailing_comma = true
multi_line_output = 3
indent = 4
force_grid_wrap = 0
use_parentheses = true

[tool.mypy]
python_version = "3.10"
pretty = true
allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
strict_optional = true
strict_equality = true
no_implicit_optional = true
warn_no_return = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_return_any = true
warn_unreachable = true
show_error_codes = true
show_column_numbers = true
show_error_context = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if T.TYPE_CHECKING:",
]
